// Code generated by go-bindata.
// sources:
// assets/config-template.json
// assets/favicon.ico
// assets/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConfigTemplateJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8a\xe6\x52\x50\x88\x56\x2a\xae\x2c\xce\xc9\x4f\x57\xd2\x51\x50\xd2\x2f\x4b\x2c\xd2\x07\xb2\xf5\xa1\x42\xb1\x5c\xb1\x80\x00\x00\x00\xff\xff\xb6\xbd\x4b\xbe\x23\x00\x00\x00")

func assetsConfigTemplateJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigTemplateJson,
		"assets/config-template.json",
	)
}

func assetsConfigTemplateJson() (*asset, error) {
	bytes, err := assetsConfigTemplateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config-template.json", size: 35, mode: os.FileMode(436), modTime: time.Unix(1462073477, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x0b\x50\x54\xd7\xfd\xc7\x7f\x2b\x0a\xf8\xe0\x2f\xea\xdf\x47\x30\x0a\x5a\x33\x9a\x58\x22\xa0\x28\xc5\x17\xa0\x82\x46\x47\x51\xd6\x28\x89\x0a\x86\x87\x24\xd1\xa2\xd1\xa8\x51\xa9\xab\xa8\x91\x28\xf8\x1a\xd3\xc1\x32\x68\x62\x54\x06\x13\x12\x9b\x56\x46\x2b\x86\x40\x02\x51\x83\x89\x0f\xc4\xf8\x88\x45\x0a\x55\x0c\x08\x59\x97\x87\x50\xb6\xe7\xe4\x92\x89\xa0\xce\xd0\x5d\xd8\x73\xe1\x7c\x3f\xe3\x67\xd6\x7b\x87\xdd\xfb\x3b\xe7\x7b\xf7\x72\x76\x39\x7b\x96\x48\x43\xd6\x64\x6f\xcf\x6f\x9d\x28\xa2\x3d\x51\x38\x29\xf0\x6d\xea\x40\x74\x9e\xed\x73\x71\x51\xb6\x93\x9e\x63\xdb\x1d\x89\x9c\x9c\xea\xb7\xd9\xfd\x56\x0e\x23\xd2\xe9\x94\xed\x21\xb6\x1a\xea\xef\x45\xe4\xe5\x55\xbf\xed\x43\xe4\x3b\x59\x43\x43\xd8\xe3\xb1\x1f\xe5\x8f\xa8\x3c\x2e\x87\x3d\x6e\x8f\xce\x8a\xcd\x48\x3c\x33\xc9\x44\xdf\x67\x1a\xcd\xb0\xb6\x19\xee\x9f\xc8\xfc\xd8\x44\xf7\x35\x43\xff\xf9\x32\xb5\x26\x3a\xd1\xcc\xf6\xd7\x34\x43\xff\x95\x9b\x71\xff\x92\x66\xe8\x3f\x73\x29\x25\xa5\x1d\xa6\x78\x97\xc4\x9e\xbf\x3c\xbf\x49\x64\xfa\xf9\x33\xc9\x68\x7c\xbc\x43\x9e\xb6\xef\x49\xfb\x63\xfc\xa7\xfb\xd9\x75\x72\xe8\xc4\xfe\x6b\x37\x65\xf2\xc4\x59\xfc\x6a\xc3\xb5\x65\xd7\x1a\xaa\x58\x1b\xcc\x03\x6e\xf7\xda\x54\xbf\x89\x64\x7c\x77\xc7\xb7\x5f\xb0\xad\x8e\x4b\x27\x07\x2e\x27\xea\xdc\x83\xab\xa1\x7d\x09\x7d\xd8\x85\xc9\x67\xca\x44\x6f\xed\xea\x6b\x25\x37\xc7\x6f\xcd\x7b\xfb\xd9\xec\xf2\x7f\x57\xea\x33\x4b\x1f\x46\xcf\xba\x18\xec\x1f\xbf\xb0\xdb\xe5\x59\x03\x8a\xec\xad\x8b\x77\xce\xd5\x4e\xf5\xf5\x8e\xf7\x6f\xdf\xcd\xce\x7d\x64\x7b\xe7\xdc\x59\x01\x76\x61\xdd\x9c\x0f\xfb\x77\xfb\x2a\x30\x74\x66\xf7\x0b\x8e\xd7\xbf\x2d\xcd\xf8\xfd\xf2\x21\xf7\x17\xbb\xdc\xf7\xbc\x18\x94\xb9\xa3\xe0\xfc\xe1\x8d\xb5\x69\xf9\x0b\xbe\xcb\x5e\x79\xeb\x6e\x87\xfd\x83\x6d\xbe\x28\xd4\x6b\xa6\xec\x1e\xc4\xff\x6d\x0b\x5a\x95\x15\x74\xee\x44\xc2\xa1\xdc\x3d\x2b\x7a\x19\xe2\x17\x6e\x3c\x53\xdd\x55\xaf\x59\x5c\xe8\x7a\xa5\xf6\x77\xb6\xce\xbe\x51\xa7\xff\xf5\xce\x8f\x0e\xb5\xae\x1e\x65\x61\x3f\x85\x06\x18\x5e\xb4\xcb\x1d\x7d\xe3\x5c\x8c\x37\x1d\x5c\x77\x36\x36\x77\xed\x88\x15\xfb\x3f\x8b\xf9\xa1\x7f\xd9\xc0\xd4\x39\x91\x33\x37\xec\x7d\x50\x95\x14\xe2\x6e\x73\x67\x76\xe4\xcc\x98\xf1\x27\x3e\x3c\x96\x53\xb0\xc3\x3d\x23\x2a\x36\x36\x77\xa8\x36\x62\x42\xf6\xa0\xde\xb3\x3f\xf5\x8f\x77\x1c\x3d\xbd\xe6\xfa\xf8\xab\xc7\x8a\xca\xfd\xee\xbd\x62\x68\x97\xeb\xa6\x5b\x6a\x6d\x7f\x9e\x32\x9e\xf1\xf2\xb0\xb2\x5d\x44\xf9\x5d\x9c\x12\x34\x9b\x86\x9b\xbf\x73\xe7\x27\xb7\x3c\x02\xd3\xbc\x37\xd7\x45\x6c\x9f\x13\xe9\xff\x41\x74\xec\xb1\x62\xbb\x17\xfe\x76\x24\xa4\xe7\xad\x63\x1f\xad\x79\xf7\xa5\x84\xe0\xb0\x1d\x05\xdb\x97\x2e\x37\x74\xdf\xbb\x7a\x77\x5a\xbf\xef\x43\x52\x7b\x67\xd9\x5c\xfb\x72\xe4\x1d\x4d\xd4\x4a\xd7\xb3\xaf\xac\xef\x6e\x1d\x5f\xf8\x7c\xa2\x6e\x73\xa4\xf5\xfc\xaf\x33\x17\x07\xf7\x3c\x98\x7b\x9d\xf7\x4e\xf8\x46\xd7\x05\xb7\x97\x1a\xfe\xbf\xbe\xef\x1a\xff\x7b\x10\x99\x13\x64\xbf\xcc\xb5\xeb\x5f\xcf\x74\x1e\xd8\xeb\xc4\xb8\xe1\xdb\xf5\xe3\x46\x57\x45\x95\x2d\x7c\x51\xe7\xb7\xfa\x7d\xfd\xd1\xbc\xd7\x23\xe2\xf4\x43\x22\x33\xfe\x19\xe7\xb4\x3a\x6e\x91\xc7\x91\x35\x7b\xb6\xdc\x99\x57\x1a\xba\x25\x2a\xda\x48\x5d\xcb\xde\x30\xf4\xdf\x7b\x35\x63\x6d\xbf\x73\x1e\x5f\x6d\xce\x9d\xaa\xbd\x3d\xf8\xe5\x51\xa5\x95\x55\x21\xf3\xb3\xe6\xe7\x0c\x1d\x78\xf0\xe6\x95\x65\xdb\x0b\x59\x47\x16\x79\x65\x3f\x1f\x69\x6b\x57\xf1\xa6\xbe\xea\xa0\x61\x4c\x5d\xcb\x74\x1e\xdf\xe9\x5e\x97\x9c\x78\xc0\xe7\xf3\xd8\xa0\xe4\x51\x49\xdf\xef\xca\x3a\xcd\xba\xef\x41\x60\x81\x81\xdf\xf8\x86\x74\x5d\x7b\x74\x4e\xd2\x37\xd3\x2b\x56\xa5\x1f\x5a\xf7\xe5\x7b\xc5\xce\x0e\x27\x1d\xe7\x66\x6a\xad\xfe\x14\x3e\xd6\xe6\x68\x5e\xc4\x37\xa7\x17\x8e\x0d\x58\x3e\x6c\xcb\xb4\x9f\x3b\x5d\x9a\x97\x73\xb1\x78\xb6\xc3\x7b\x13\xc6\xe4\x4c\x88\x9e\x13\x7d\xb2\xc3\xfe\xd1\x29\xe5\x17\x92\x26\xa5\x7c\x37\xa2\xc7\xba\xa0\xb1\x13\x9e\xd2\x8f\x8e\xce\xa7\x1c\x83\xdd\xfb\xa6\x39\x06\xef\xba\x37\x3c\xd3\x23\xe4\xd9\xc4\x1a\x97\xde\xe9\x7b\x4f\xa5\x17\x15\xbf\xed\xb0\xfb\xd2\x4f\xb7\x97\xc5\x65\xcc\xa3\xd4\xb2\xe3\x79\x99\x9b\xaa\x63\x5f\xad\x7e\xc3\x3e\xfd\xef\xeb\xce\x77\xe0\x27\xe4\x9e\x1b\xe9\xf9\xbe\xd9\x6f\xf6\x5f\xff\x51\xe1\xa9\x2e\xfd\x5e\x5d\x9d\xba\x26\xe6\xec\xc7\x4b\x16\x7f\xf2\xe3\x01\x9f\x55\xa3\xfe\x98\xcc\x6e\xee\x79\x86\x07\xce\x4a\xf3\x09\x8b\x1b\xb9\x63\xfc\xb5\xad\x33\xb2\x9a\xab\xc7\x1e\xdf\x99\x72\xe1\x53\xd6\x87\x47\x1c\x02\x72\xfb\x6a\x23\x92\xcb\x97\x18\xac\x7b\x5e\xbb\x75\x75\x3e\x3b\x2d\x57\xae\x4a\xc8\xf6\xf8\xb3\xf6\xbe\x7f\x8c\xd5\xbc\x3c\x8f\x33\x2b\xa7\xcf\x19\x36\x73\x43\xe0\xf1\x65\xc9\x36\xd3\x96\x6e\xca\xa9\x73\xea\x32\x3c\x73\xec\x3a\x1a\x4b\x15\xfa\x01\x79\x9f\x7f\xc8\x4e\x94\x70\xc7\x55\x65\xae\x09\xd5\x11\x97\x3d\x47\x56\x45\x5c\x1e\x98\xb7\x68\x5f\xc7\xac\xaa\x93\x6b\xb6\x36\xea\xb9\x3a\xbf\xf5\x56\x07\xfa\x6c\xbf\xe9\x97\xba\x6d\x01\xbb\xc4\x3c\xb7\x62\xd2\xdc\x15\xa1\x0b\x57\x84\x79\x86\xbc\x15\xc6\x6e\xc8\xcd\xc5\xd5\xdd\xd9\x65\x84\xb3\x9b\x9b\xd6\xd5\xdd\xd3\xd5\xcd\xd3\xcd\xcd\xd9\xc5\xdd\xd3\xc5\xe5\xe1\x6b\x93\x93\x1b\xdc\x61\x49\x64\xe8\xeb\xe1\xef\x3c\xfd\x0e\xdb\xc6\x97\xf5\xe2\xd7\xbd\x29\x93\xa6\x4f\x4c\xf1\x09\xde\xc8\xc7\x59\x6c\xa8\x46\xc1\xf4\xc8\x38\x6b\x50\x8b\x8c\xb3\x00\x68\xcd\x6c\x25\xf3\xc7\x9b\x22\xe4\x35\x6f\x6c\xa5\xb5\xff\x6a\x85\x0a\x6a\x30\x47\x73\xc7\xc9\xa2\x45\xfd\xa8\x5f\xf6\xfa\x1f\xaa\xa0\x0e\x53\x35\x30\xa3\x99\x55\x64\xfa\x7b\x05\xa2\xe4\x35\x47\x11\x00\x00\x88\x03\xe3\x7f\x71\x62\xfc\x8f\xfa\x51\x7f\xeb\xb5\x2d\xd4\x8f\xf1\x3f\xc6\xff\x00\x00\x39\xd9\xcc\xac\x24\xf1\xd7\xc3\xff\x55\x5e\xb3\x8e\x30\xfe\x17\x69\x5b\x18\xff\x88\xae\x01\xf5\xb7\x5e\xdb\x42\xfd\xd5\x2a\xa8\xc3\x54\xf9\xf8\x7f\x03\xb5\xce\xdf\x5f\x18\xff\xab\x00\xe3\x2f\x3c\xfd\xd6\xd2\xc7\x93\xed\xf8\x7c\x9e\x96\x13\xd3\x8b\x1e\x99\xa7\x65\x8f\x79\x5a\x4f\xe0\x05\x32\x7d\x3e\xb1\x39\x06\x30\x07\x93\x79\xf3\xc9\xcd\xf5\x9e\xc0\x63\xff\xfa\x7b\x12\xc7\x17\x7b\xfc\x32\x81\xc7\x2f\x66\x0e\x25\x31\xcf\x3f\x2e\xbf\x4c\x02\xb1\xbc\x45\xa6\x7f\x9e\xca\x1c\x8f\x30\x97\x30\xeb\x48\xdc\xf9\x2f\xfa\x35\x82\x1a\xae\x3f\x32\x1f\x9f\xbf\xc7\xf6\xb5\xc0\xe3\xa7\x13\x90\x9d\x4c\x12\xf3\x3a\x9d\x9f\xfb\x69\x24\xfe\xf9\x27\xf3\xf5\x47\x0d\xc7\x17\x59\x03\xff\xfd\xcb\xc7\x00\x22\xc6\x1f\x49\xf5\xc7\x16\x8a\xd1\xd8\xb4\x77\x24\x8c\x8f\xd0\xd4\x9f\x6b\xca\xcf\xf2\x01\xb8\x8e\x6f\x68\x1e\x79\x9f\x82\xfd\x0f\xef\x53\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x25\xff\xc7\xf4\x23\x71\x73\x06\x60\xcb\xcb\xe7\x46\xf1\x75\x1e\xbb\x50\x43\xc2\x98\x7a\x12\xfb\x37\x0b\x68\x39\xf9\xdc\xa4\x79\xa4\x30\x43\x05\xf5\x40\xcb\xcb\xe7\xe7\xf8\x30\xcf\xa8\xa0\x16\x28\xc6\x53\xd4\xba\x3f\x4f\x0d\xcd\xb3\x44\x05\x35\x40\x71\x3e\x50\x41\x0d\x10\xf9\x43\xe4\x0f\x91\x3f\x44\xfe\x10\xf9\x43\xe4\x0f\x91\x3f\x44\xfe\x10\xf9\x43\xe4\x0f\x91\x3f\x44\xfe\x10\xf9\x43\xe4\x0f\x91\x3f\x44\xfe\xd0\xbc\xfc\x5b\xfb\x9a\xde\xd0\x74\xef\x32\x4f\xab\xa0\x0e\x28\xc6\xcf\x98\xde\xcc\xff\xa8\xa0\x16\x68\x59\xf9\x1a\x5d\xee\xa4\x30\x97\x59\xaa\x82\x9a\xa0\x65\xe4\xeb\x13\xcf\xa0\x86\x74\x22\x65\x59\xeb\x69\xb0\x4d\x3b\x8e\x69\x4b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xda\x22\xed\x98\x2f\x33\xff\x42\xe2\xbe\xb3\x0b\xb6\xbc\xfc\xbb\x59\xe3\x99\x33\xe9\x37\x6c\x98\xa9\x24\x7e\x4e\x0a\xb4\xac\x29\xcc\xf6\xcc\x0d\x2a\xa8\x05\x8a\x71\x39\x33\x5f\x05\x75\x40\x31\x5e\x22\xb1\xdf\xd3\x0d\xc5\xfa\xb3\x0a\x6a\x80\xe2\xc4\xe7\xbf\xe4\x16\xf9\xcb\x2d\xf2\x97\x5b\xe4\x2f\xb7\xc8\x5f\x6e\x91\xbf\xdc\x22\x7f\xb9\x45\xfe\x72\x8b\xfc\xe5\x16\xf9\xcb\x2d\xf2\x97\x5b\xe4\x2f\xb7\xc8\x5f\x6e\x91\xbf\xdc\x22\x7f\xb9\x45\xfe\x72\x8b\xfc\xe5\x56\x4f\xca\x5a\x70\xa2\xeb\x80\x62\xbc\xc9\x4c\x50\x41\x1d\x50\x8c\x71\xcc\x67\x98\x05\x2a\xa8\x05\x5a\x56\xfe\xdc\xef\x4e\x0a\x7d\x99\x1f\x30\xef\x90\x32\x26\x80\x6d\xd7\x22\x52\xae\xf9\xbd\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x6d\x89\x01\xa4\xac\x0d\x5a\xc2\xac\x85\x6d\xd6\x9a\xfa\x8c\x0f\x31\xfb\x91\x82\x13\xb3\x98\xc4\xcf\x47\x82\x96\x95\xcf\x03\x72\x60\x1e\x56\x41\x2d\x50\x8c\x7c\xbd\xef\xfb\x2a\xa8\x03\x8a\x11\xf3\x7e\xe5\x56\xaf\x82\x1a\xa0\x38\xf1\xf9\x2f\xb9\x45\xfe\x72\x8b\xfc\xe5\x16\xf9\xcb\x2d\xf2\x97\x5b\xe4\x2f\xb7\xc8\x5f\x6e\x91\xbf\xdc\x22\x7f\xb9\x45\xfe\x72\x8b\xfc\xe5\x16\xf9\xcb\x2d\xf2\x97\x5b\xe4\x2f\xb7\xc8\x5f\x6e\x91\xbf\xdc\xf2\xfc\x6b\x54\x50\x07\x14\x63\x19\xf3\x8a\x0a\xea\x80\x62\x3c\xcb\x8c\x54\x41\x1d\x50\x8c\xa1\xcc\x76\x84\x39\xe0\x32\x9a\xc8\xd4\xd0\x6f\xbc\xc4\xdc\xc5\x3c\x00\xdb\xb4\xbb\x99\x7e\x04\x00\x00\x00\x00\x00\xa4\xc4\xa8\x72\xd2\x1b\x96\x6b\xa5\x6b\xb8\xad\xb1\x54\x3f\x81\x27\xa3\x6b\xb8\xa9\x49\x6f\xb8\x6d\x25\xfa\xfc\xb1\x34\x8d\xfa\xc3\xaa\x05\xbb\x1e\x98\x80\xae\xe1\xa6\x46\xf4\xf9\x22\x9a\xc6\xfd\x61\xa9\x1c\x40\xd3\x48\x6f\xb8\xd9\xec\xd7\xd3\x21\xec\x41\xbd\x48\x79\x5e\x68\x7e\x59\x0a\x46\xd9\xd1\xa3\xb3\x22\x00\x00\x00\xea\xc3\xdc\xc9\x4c\x92\x48\xbe\x26\x5c\x2c\xb3\x27\x33\x8b\xc4\xff\xcd\x4a\x94\xff\x60\xd6\xa9\xa0\x0e\x51\x56\xa8\xa0\x06\x91\x56\xa9\xa0\x06\xb4\x1f\xed\x47\xfb\xd1\x7e\xb4\x1f\xed\x17\xd1\x7e\x99\xc7\x3f\x06\x52\xde\x8a\x11\x5d\x87\x28\x8f\x33\x7b\x93\x7c\xaf\x7f\xb8\xfc\xf5\x4f\x0f\x02\x00\x00\x00\xe4\x65\x0c\x53\x2b\x91\x01\xcc\x3f\xd4\xb7\x9d\x8f\x7d\x44\x8f\xc3\x44\xb9\x85\xe4\x7e\x0d\x24\xfb\x1a\xf9\x32\x67\x8f\xf6\xa3\xfd\x68\xbf\xf8\x1a\xd0\x7e\xb4\x1f\xed\x17\x63\x25\xc9\xfd\x5d\x31\x3f\x30\x27\x33\x0b\x49\xfc\x77\xb8\x59\xda\xdb\x4c\x6f\x02\x00\x00\x00\x80\x8c\x4c\x21\x65\x0c\x28\x7a\x3c\x62\xe9\xef\xcb\xcd\x67\x4e\x20\x65\xec\x27\x7a\x1c\x2a\xca\x1b\x2a\xa8\x41\xa4\x95\x2a\xa8\x41\xa4\xb2\xbf\xfe\x45\xfb\xc5\xd7\x80\xf6\xa3\xfd\x68\x3f\xda\x2f\xaa\xfd\x32\xaf\x95\x5c\xc2\xdc\xaa\x82\x3a\x44\xb9\x9e\x14\x46\x31\xfd\x25\x73\x24\x01\xe9\x69\xea\x7a\x02\x6a\xad\xab\x31\x3a\xe5\xee\x16\x5b\xef\xc2\xd4\x3a\x2d\xdd\xaf\x3a\xe5\xe6\xb1\x75\x51\xfe\x1b\x00\x00\xff\xff\x46\xb4\x2d\xb4\x6e\x8a\x01\x00")

func assetsFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_assetsFaviconIco,
		"assets/favicon.ico",
	)
}

func assetsFaviconIco() (*asset, error) {
	bytes, err := assetsFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/favicon.ico", size: 100974, mode: os.FileMode(436), modTime: time.Unix(1462600281, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x5a\xfb\x6f\xdb\x38\xf2\xff\xbd\x7f\x05\xd7\x05\xd6\xce\x26\x96\x9d\x66\x1f\xa9\xe3\x04\x68\xb3\x05\x9a\x2f\xba\xed\xe2\x9b\x04\x8b\x43\xcf\x28\x68\x89\xb6\x78\x91\x45\x2d\x45\xd9\x9b\xbd\xf5\xff\x7e\x33\xd4\xc3\x7a\x90\x92\xbc\xbd\x93\x81\xda\x12\x39\xc3\xe1\x3c\x3e\xf3\xa1\xd2\xf9\x37\x3f\x7f\xba\x7d\xf8\xc7\xaf\xef\x88\xaf\x36\xc1\xcd\x8b\x79\xfe\xc5\xa8\x77\xf3\x82\xc0\x35\x57\x5c\x05\xec\x26\x10\xeb\x8d\x08\xe7\x93\xf4\x2e\x1d\x89\xd5\x73\xfe\x1b\xaf\xa5\xf0\x9e\xc9\xbf\x8b\x5b\xfd\x88\xba\x4f\x6b\x29\x92\xd0\x9b\x91\x97\xd3\xe9\xf4\x8a\x4c\xbe\x7b\x79\xfe\x1a\x3f\x57\xe4\xbb\x49\x65\xee\x4a\x84\x6a\xbc\xa2\x1b\x1e\x3c\xcf\xc8\xe0\x67\x29\xb8\x47\xee\x69\x18\x0f\xce\x48\x0c\x5f\xe3\x98\x49\xbe\xba\x2a\x44\xf6\xc5\xaf\x97\x31\xf7\xd8\x92\xca\xda\xda\x91\x88\xb9\xe2\x22\x9c\x11\xba\x8c\x45\x90\x28\x76\x55\x19\x57\x22\x9a\x91\x69\xf5\x59\xc0\x56\xaa\xf1\x70\x29\x94\x12\x9b\xc6\xe3\x1d\xf7\x94\x3f\x23\xaf\x7e\x98\x46\x7f\x5c\xd9\x77\x9d\xed\xb6\x6a\x1a\xf5\x3c\x1e\xae\x67\xe4\x1c\x64\xc9\x14\x3f\xad\x1b\xbb\x21\xb4\xb6\x39\x57\x04\x42\x82\x76\x7a\x81\x9f\xaa\x76\x37\x91\x31\x0e\x46\x82\x87\x8a\xc9\xea\xa0\xc7\xe3\x28\xa0\xe0\xe1\x65\x20\xdc\x27\x8b\x59\x3f\x82\x55\xe7\x3f\xd4\xb7\xb5\xa1\x72\xcd\xc1\x9d\x68\xef\x39\xda\xdd\xb2\xeb\x57\x6f\xf1\x73\x65\x09\x88\x64\x01\x55\x7c\xcb\xba\x36\xed\x50\x17\xa7\xb5\x27\xd5\xf7\x98\x57\x6d\x8a\xe8\xcc\x17\x5b\x56\x4f\x8f\xaa\xb9\x97\xf0\x79\xdd\xd3\x9c\x6e\x75\x7d\x8c\x22\x71\x44\xc3\x23\x53\x36\x8b\xfa\xce\xe7\xf5\x91\xca\xf2\x17\x97\xaf\xdf\x5c\x5c\x56\x27\x48\xbe\xf6\x21\xb5\x7f\xaa\x07\x55\x57\x5d\xcc\xff\x64\x90\x8c\xaf\xea\x83\xba\x44\x7e\x6c\xa4\xb7\x90\x1e\x93\x63\x49\x3d\x9e\xc4\x86\xf1\x22\x8d\x40\x1f\xf9\xbe\x3c\x6a\xf5\xc3\x8c\x6d\x22\x55\x07\x8f\x22\x55\x43\x11\x9a\x53\xc5\x05\xe3\x59\xa8\xfe\x6b\x85\x6f\xa8\xe5\xcc\x6f\xfd\x20\xa1\x0a\x61\xb7\x22\x91\x1c\x12\xe5\x23\xdb\x01\x86\x65\x77\x67\x64\xf0\x21\x71\xb9\x47\x35\xb6\x91\x87\xe7\x88\xed\x24\x84\x53\x0e\x0e\x23\x95\x87\x80\xba\x02\x5c\xe4\x32\x7b\xdc\x6c\x3e\xce\xdd\x73\x03\xae\xdc\xfe\xaf\xd0\xf1\x28\x07\x61\xe1\xac\x02\xb1\x1b\x83\x7f\x68\xa2\x84\x65\xf4\x0f\xd3\x68\x91\x56\x0d\x60\xd2\xf5\x30\xd6\x4e\xc2\x64\xd9\x49\x1a\x55\x27\x6c\x79\xcc\x97\x3c\xe0\x0a\x96\xf5\xb9\xe7\xb1\xb0\xdb\x5f\x66\xec\x29\x6b\xd2\xbf\x83\xf6\xcc\x4c\x5d\x6f\x0a\x40\x1b\x10\xe7\xe8\x6e\x2a\xe4\xc2\x0d\x16\x18\xae\x38\x23\x92\x16\x8c\x55\x54\x25\x71\xcd\x22\x9f\xa5\xa1\x3c\x6f\x6d\x68\x92\x79\x36\x58\xef\x9f\x49\xf6\xde\xd9\xc8\xb1\x83\xd5\xb3\xd9\x78\xc7\x96\x4f\x1c\xf2\xde\x95\x22\x08\x9a\x2d\x3f\x53\xab\x37\x40\x80\x6a\x40\x95\x48\x02\x49\xa5\xb8\x4b\x03\x52\x48\xc5\x75\xea\x51\xd9\x79\x2e\xe7\x0b\xc9\xff\x84\x30\x5a\x25\x5b\x2d\x1b\x2b\x09\x4e\x6b\xed\x39\x17\xf8\xe9\xb9\xd1\xb1\xf2\x93\xcd\xb2\x4d\x5d\x3d\x57\xda\xd5\xb9\x42\x86\x1d\x2d\xd1\x68\xde\x7c\x92\x91\xbe\xf4\x2e\xe0\xe1\x13\x76\xf3\xeb\x01\x87\x8c\x1f\x10\x5f\xb2\xd5\xf5\x60\x45\xb7\x78\xeb\xc0\x3f\x03\xe0\x92\x93\x94\x4c\xce\x91\x1f\x66\xcc\x11\xcb\x81\x7b\xd7\x83\xac\x0b\x0c\x6e\xe6\x13\x78\x54\x1b\xcc\x6a\xc8\x3c\x98\x66\x70\x75\x0c\xb6\xc7\x23\x75\x20\xa4\x5b\x48\x90\xc7\x3b\x72\x5d\xdb\x26\x14\x90\x64\x31\x74\xae\xc1\x2e\x9e\x4d\x26\x50\x7e\x34\xf0\x45\xac\x66\x97\xd3\xcb\xe9\x64\x07\x84\xb3\x9a\x91\x7c\xc3\xd5\x07\xb1\x8e\x31\x3f\xa6\xd3\xb3\x5a\x72\x43\x7e\x3c\x86\x12\x76\x08\x59\x5b\x1d\xe3\x21\x87\x9c\x5a\x25\xa1\x8b\xe5\x31\x3a\xa9\x99\xa1\xc5\x7d\x1e\x3b\x31\xd4\x3f\x53\x60\x66\xc8\x76\xe4\x37\xb6\xbc\xd7\xf7\x23\x3d\x96\xd9\x7a\x72\xf5\xa2\x4d\xd6\x81\x1e\x11\xb1\x10\x54\xe8\x87\x22\xfc\x04\x77\xce\x92\x87\x9e\xd6\x72\x72\xd5\x21\xbc\x81\x25\xe8\x9a\x1d\xe4\x7f\x49\x1f\x1c\xa1\xc2\x0d\x44\x5c\x52\x70\x8b\xb7\x15\x71\xb3\xbc\x27\x36\x18\x9f\xbd\x45\x3d\x0c\x3b\x39\x53\xb8\x26\x9e\x70\x93\x0d\x64\x84\xb3\x66\xea\x5d\xc0\xf0\xe7\xdb\xe7\x3b\x6f\x34\xcc\xa6\x0c\x6d\x56\xa2\x9a\x1c\x91\x5b\xd4\x64\x53\x86\x26\x6b\x0b\x21\x11\x3e\xb1\x67\x4f\xec\xd0\xdb\x45\x6c\x99\x29\xb8\x78\x61\x0a\xba\xc2\x43\xcf\x30\x07\x04\x6f\xf1\xf7\x5f\x7f\xc1\x0d\xe0\xb4\xeb\x37\xed\xc5\x8b\xaf\xc8\x28\x15\xba\x26\xaf\x7e\xb2\xa9\xce\xd5\xd3\xdc\xeb\x25\x67\x39\xbf\x27\x4c\x3e\xdf\xb3\x80\xb9\x4a\xc8\xd1\xe0\x40\xb7\xb2\xb6\x36\x38\x39\xb3\x2a\xc5\x6b\x97\x2b\xdd\x41\x08\xc5\x2e\xfe\x4c\xd1\x5b\x6f\x94\x92\x7c\x09\x08\x3f\x1a\x7a\x54\xd1\x71\x48\x37\x6c\x78\xb2\x30\xb8\xab\xd0\xe3\xf0\x10\x80\xe6\xfd\xc3\x2f\x1f\x40\xe3\x70\x68\xde\xf0\xbe\xf1\x74\x5f\xca\x9d\xca\xe0\xbe\x6a\x77\x0a\x03\x33\x83\x8b\x3c\xa4\x1f\xf6\x8c\xd1\x72\x43\x83\x17\xd6\x92\xb1\xb0\xa3\x6c\xf1\x3a\xb8\x1c\x01\xd1\x39\x60\x27\xee\x53\x2b\x31\x6c\x76\xdf\x5c\x0f\xfa\xe9\xd7\xae\x06\x2a\x4c\x6b\xb5\xf9\x2d\x85\x88\x59\x47\x06\x63\x22\xea\x95\x25\x83\xda\x08\x21\x99\xee\xf0\x44\xb9\xa5\x81\xcd\x4e\x37\x60\x54\xe6\x93\x6c\xb2\xe6\x24\xf0\x20\x5b\x15\x23\x66\x19\xd3\xf6\x2c\x88\xa4\x23\xeb\xe8\x08\x8c\x6a\x4b\x35\x9c\x90\xe1\x5c\x97\x1f\xb0\xcc\xfe\x15\x0b\x2c\xf9\xff\xbb\xff\xf4\xd1\x89\x80\x09\xb0\x11\x73\xb0\x08\x4c\x60\x81\x7e\xc3\xf9\xce\x8a\x07\x2c\xee\x8e\x69\x56\xb4\x7d\x4a\x45\x32\x95\xc8\x30\x95\xc5\x06\x73\xaf\xa0\xf7\x6c\xe2\xf2\x72\x1d\x99\x80\x17\x0b\x00\xac\x0b\x2b\xc3\x36\xf4\x6a\x20\x41\x2a\xb2\xb0\xe3\x87\x57\xc6\x58\x17\xcc\x53\x2c\xab\x3d\x80\x0d\xbe\x35\xc2\x2b\x5e\x5a\xb1\x0b\xc2\xe9\x8f\x56\x7c\x82\x0c\x01\xf6\xec\xb2\xd1\xe4\xdb\xc9\x1a\x4e\x4e\xdf\xd2\x4d\x74\x35\x68\x6e\xdd\x2c\x33\x4f\x65\x02\xd5\x5f\xe4\x26\x15\x59\x1f\x21\x32\x48\x45\x7e\x4f\xc4\x11\x42\xc3\x54\xe8\xe5\xf4\xe2\x35\x08\x59\x3c\xe5\x55\x52\x25\x75\x97\x39\x5d\x76\x0e\x8d\xa0\xd0\xbd\x5b\x9f\x07\xde\xc8\xb3\x29\x9c\x4c\xc8\xbd\xe6\x86\x40\x68\xb2\xb3\x9b\x45\x5d\x4a\x21\x1f\x44\x04\x0b\xe7\x77\xef\x35\x7d\xb6\xab\xbe\x05\x50\x08\x49\x12\x91\x00\x58\x94\xbd\x14\xbe\x20\x78\x84\x8f\x51\x9e\x94\x16\x85\x98\xb6\xdf\x40\x5f\x89\xdf\xe8\x4e\xd6\xd6\x1e\xb5\xda\x12\x45\x3b\x3d\x35\x7b\x29\xdd\x5a\xd2\x63\x4e\x56\xaa\xef\x69\xe8\x01\x0c\x57\xbb\xec\x10\xdf\x64\x0c\x4f\x2a\xb1\xc9\xb5\xf6\xee\x7b\x16\x54\xfb\x92\x44\x00\x36\xec\x01\xdf\xbe\x76\xa0\x5a\x79\x6a\xad\xb3\x98\x75\x97\x1c\x04\x16\x4f\x0d\x6e\x87\x18\xbe\x87\x8d\x13\x0a\x09\x92\xc1\x40\x63\x0e\x1e\x99\x46\x08\x18\xc0\x72\x80\xfa\x56\x30\xc3\x16\xa3\xa2\xbf\x64\xf3\x1c\x9f\xc6\x9f\x76\xe1\xaf\x12\xd8\xac\x54\xcf\x23\x50\x75\x72\x4c\x7c\xc9\x69\x0d\xab\x40\xc1\xe2\xeb\x23\x50\x98\x59\xf1\x14\xb8\xca\x66\x5b\x81\x7e\xfa\x6d\x39\xa2\x79\xfa\xfa\xbc\xb3\x4b\xe3\xa5\xb1\xf9\x38\xbd\x64\x34\x24\xa7\x06\x6f\x90\xe1\xc9\xb1\xc4\x20\x2f\xc2\x52\xe6\x20\xcb\xb3\x75\xc5\xcc\xd1\xf5\x1e\x81\x22\x8b\x6a\x79\xbc\x09\x82\x02\xfe\x4d\x0e\xce\x53\x20\x60\xe1\x5a\xf9\xe4\x26\x55\x58\x1c\xbe\x6c\xae\x2e\xd2\x8e\xeb\xdc\x85\xaf\xf9\x75\x43\xd9\xb8\xae\x0c\xe6\x9d\x9e\xb6\x65\x56\xbe\x11\xbe\xc0\x66\x0f\x2e\xff\x08\x7c\x1c\x50\x7a\x23\xb6\x2c\xc5\xd2\xc3\x0c\x0b\x9f\x31\xa5\x56\x8b\xe3\xb3\x33\x53\x17\x15\x29\x73\x1c\xe0\x7d\x75\x2c\x28\xa6\x14\x0c\xaa\x03\x2d\x8a\x79\x1d\x24\xf4\x78\x2a\x98\x32\x95\xde\x08\xd7\xd0\x0b\xf1\x8c\x59\x71\x37\xea\x47\x91\xfb\x9d\xa5\x3b\xc4\x8f\x3f\x4e\x37\x15\xfc\xad\x23\x75\x53\x4d\xe7\xb1\xba\xe1\xde\xd2\xe8\x99\x7e\x61\xd1\x1e\xff\x12\x87\x2c\x65\x80\x95\xb7\x96\xab\xbc\xe7\xc1\xbd\x93\xd6\xd6\x8f\xe8\x0d\x81\x66\xaf\x41\xf3\x1c\x28\xfd\x77\xd4\xf5\x47\x15\xab\xcf\x08\x37\x76\x3a\xbc\x34\x4c\x60\x8f\xc3\x89\x9f\xa7\x8b\x03\xeb\xfa\x4c\xfe\xe9\x2c\x4e\x27\x67\x64\x38\xb6\xd2\x53\x24\x32\x9a\xcc\x92\xfc\x30\xed\x6b\x16\x60\x5f\x4a\xb1\x4d\x0b\x15\xa6\x26\x24\xd4\x21\x01\xb9\x8a\x0f\x32\x73\x11\xcf\xe7\xc8\x31\x6e\xe6\x13\xfd\x65\x39\x22\xa4\xf2\xfa\x64\x18\x7f\xc1\xc6\xc0\x2d\xcd\x4f\x4f\x8c\x2d\xc7\xfa\xb3\x7c\xd9\xb6\x3c\x2d\x87\xb9\x4c\x34\x51\x73\xb7\x1f\xa1\x79\x65\x40\x6b\xf5\x21\x4c\xf9\x4d\xcf\xe8\x3e\x53\x98\x54\x14\xe2\x99\x3f\x76\xad\xfe\x38\xcc\x4e\x4a\x6c\xa8\x43\x6f\x46\x43\x31\x4c\x14\x3a\x77\xd7\xfc\x0a\x81\x04\x21\xf4\x94\xc5\x51\x8d\xba\x28\x7b\xb8\xd0\x68\x73\x73\xa5\x1f\x67\xa1\x5c\xc0\x82\x85\xa0\x3d\x3c\x6f\x61\x1c\x4e\xf2\xdc\x7d\x22\x6c\x0b\x0b\xdb\x93\x07\x01\x0a\xa7\xd5\x5f\x85\x59\xfb\x6a\x1f\x26\x99\x5f\x7f\x87\x51\x16\xd6\x7d\x25\xb3\xcc\xaf\x26\x9b\x74\x03\x1a\xc7\x1f\xa1\x42\x5a\x0e\xe9\xed\x1a\xfa\xa5\x4c\x7e\x35\x69\xc4\x61\xa4\xcd\xcd\xff\xaf\xb9\x0a\xc9\xfe\x8a\x95\x43\x16\x46\xad\xfd\x6d\x62\xe8\xfa\x42\xc6\xe5\x72\x6b\xd0\xb8\xd2\xeb\xc4\x81\xa5\xf0\xf0\xfa\xbc\xc8\x21\xda\x71\x21\xde\xa3\x4c\xf5\xd9\x21\x57\x68\x57\x08\x68\x6f\x77\xef\x6d\x75\x90\xb9\x43\xbb\x1c\x41\x07\x89\x41\x0b\xe8\xe0\xc5\x1c\x45\xe5\x1a\xfa\x6f\x65\xf1\xd4\x93\x2d\x26\x14\x62\xdd\xc7\x42\x63\x57\xcb\xaf\x03\x58\x1c\xb7\x7e\x7f\xf8\xaa\xce\x2e\xe5\xa3\x92\x09\x6b\xb1\xac\xf3\x28\x9a\x5f\xfb\xde\x1c\xc5\x14\xb6\x72\xb8\x56\x5c\xc6\xca\x16\xb0\x9e\x29\x8a\xad\x5e\xe3\x54\x83\x0b\x17\x77\xfb\x92\x19\xe9\x62\x80\x6d\x81\xd0\x4e\x7c\xbc\xd3\x6f\xda\x52\xa3\x1f\xef\x32\x1d\xd0\x83\xb3\x3f\x37\xcd\x27\xe9\x5f\xb6\xe6\x13\xfd\x9f\xa7\xfe\x13\x00\x00\xff\xff\xfc\xae\x54\x2e\x53\x25\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 9555, mode: os.FileMode(436), modTime: time.Unix(1462600538, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/config-template.json": assetsConfigTemplateJson,
	"assets/favicon.ico":          assetsFaviconIco,
	"assets/index.html":           assetsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"config-template.json": &bintree{assetsConfigTemplateJson, map[string]*bintree{}},
		"favicon.ico":          &bintree{assetsFaviconIco, map[string]*bintree{}},
		"index.html":           &bintree{assetsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
