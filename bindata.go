// Code generated by go-bindata.
// sources:
// assets/config-template.json
// assets/favicon.ico
// assets/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConfigTemplateJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8a\xe6\x52\x50\x88\x56\x2a\xae\x2c\xce\xc9\x4f\x57\xd2\x51\x50\xd2\x2f\x4b\x2c\xd2\x07\xb2\xf5\xa1\x42\xb1\x5c\xb1\x80\x00\x00\x00\xff\xff\xb6\xbd\x4b\xbe\x23\x00\x00\x00")

func assetsConfigTemplateJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigTemplateJson,
		"assets/config-template.json",
	)
}

func assetsConfigTemplateJson() (*asset, error) {
	bytes, err := assetsConfigTemplateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config-template.json", size: 35, mode: os.FileMode(436), modTime: time.Unix(1462073477, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9d\x0b\x50\x54\xd7\xfd\xc7\x7f\x2b\x0a\xf8\xe0\x2f\xea\xdf\x47\x30\x0a\x5a\x33\x9a\x58\x22\xa0\x28\xc5\x17\xa0\x82\x46\x47\x51\xd6\x28\x89\x0a\x86\x87\x24\xd1\xa2\xd1\xa8\x51\xa9\xab\xa8\x91\x28\xf8\x1a\xd3\xc1\x32\x68\x62\x54\x06\x13\x12\x9b\x56\x46\x2b\x86\x40\x02\x51\x83\x89\x0f\xc4\xf8\x88\x45\x0a\x55\x0c\x08\x59\x97\x87\x50\xb6\xe7\xe4\x92\x89\xa0\xce\xd0\x5d\xd8\x73\xe1\x7c\x3f\xe3\x67\xd6\x7b\x87\xdd\xfb\x3b\xe7\x7b\xf7\x72\x76\x39\x7b\x96\x48\x43\xd6\x64\x6f\xcf\x6f\x9d\x28\xa2\x3d\x51\x38\x29\xf0\x6d\xea\x40\x74\x9e\xed\x73\x71\x51\xb6\x93\x9e\x63\xdb\x1d\x89\x9c\x9c\xea\xb7\xd9\xfd\x56\x0e\x23\xd2\xe9\x94\xed\x21\xb6\x1a\xea\xef\x45\xe4\xe5\x55\xbf\xed\x43\xe4\x3b\x59\x43\x43\xd8\xe3\xb1\x1f\xe5\x8f\xa8\x3c\x2e\x87\x3d\x6e\x8f\xce\x8a\xcd\x48\x3c\x33\xc9\x44\xdf\x67\x1a\xcd\xb0\xb6\x19\xee\x9f\xc8\xfc\xd8\x44\xf7\x35\x43\xff\xf9\x32\xb5\x26\x3a\xd1\xcc\xf6\xd7\x34\x43\xff\x95\x9b\x71\xff\x92\x66\xe8\x3f\x73\x29\x25\xa5\x1d\xa6\x78\x97\xc4\x9e\xbf\x3c\xbf\x49\x64\xfa\xf9\x33\xc9\x68\x7c\xbc\x43\x9e\xb6\xef\x49\xfb\x63\xfc\xa7\xfb\xd9\x75\x72\xe8\xc4\xfe\x6b\x37\x65\xf2\xc4\x59\xfc\x6a\xc3\xb5\x65\xd7\x1a\xaa\x58\x1b\xcc\x03\x6e\xf7\xda\x54\xbf\x89\x64\x7c\x77\xc7\xb7\x5f\xb0\xad\x8e\x4b\x27\x07\x2e\x27\xea\xdc\x83\xab\xa1\x7d\x09\x7d\xd8\x85\xc9\x67\xca\x44\x6f\xed\xea\x6b\x25\x37\xc7\x6f\xcd\x7b\xfb\xd9\xec\xf2\x7f\x57\xea\x33\x4b\x1f\x46\xcf\xba\x18\xec\x1f\xbf\xb0\xdb\xe5\x59\x03\x8a\xec\xad\x8b\x77\xce\xd5\x4e\xf5\xf5\x8e\xf7\x6f\xdf\xcd\xce\x7d\x64\x7b\xe7\xdc\x59\x01\x76\x61\xdd\x9c\x0f\xfb\x77\xfb\x2a\x30\x74\x66\xf7\x0b\x8e\xd7\xbf\x2d\xcd\xf8\xfd\xf2\x21\xf7\x17\xbb\xdc\xf7\xbc\x18\x94\xb9\xa3\xe0\xfc\xe1\x8d\xb5\x69\xf9\x0b\xbe\xcb\x5e\x79\xeb\x6e\x87\xfd\x83\x6d\xbe\x28\xd4\x6b\xa6\xec\x1e\xc4\xff\x6d\x0b\x5a\x95\x15\x74\xee\x44\xc2\xa1\xdc\x3d\x2b\x7a\x19\xe2\x17\x6e\x3c\x53\xdd\x55\xaf\x59\x5c\xe8\x7a\xa5\xf6\x77\xb6\xce\xbe\x51\xa7\xff\xf5\xce\x8f\x0e\xb5\xae\x1e\x65\x61\x3f\x85\x06\x18\x5e\xb4\xcb\x1d\x7d\xe3\x5c\x8c\x37\x1d\x5c\x77\x36\x36\x77\xed\x88\x15\xfb\x3f\x8b\xf9\xa1\x7f\xd9\xc0\xd4\x39\x91\x33\x37\xec\x7d\x50\x95\x14\xe2\x6e\x73\x67\x76\xe4\xcc\x98\xf1\x27\x3e\x3c\x96\x53\xb0\xc3\x3d\x23\x2a\x36\x36\x77\xa8\x36\x62\x42\xf6\xa0\xde\xb3\x3f\xf5\x8f\x77\x1c\x3d\xbd\xe6\xfa\xf8\xab\xc7\x8a\xca\xfd\xee\xbd\x62\x68\x97\xeb\xa6\x5b\x6a\x6d\x7f\x9e\x32\x9e\xf1\xf2\xb0\xb2\x5d\x44\xf9\x5d\x9c\x12\x34\x9b\x86\x9b\xbf\x73\xe7\x27\xb7\x3c\x02\xd3\xbc\x37\xd7\x45\x6c\x9f\x13\xe9\xff\x41\x74\xec\xb1\x62\xbb\x17\xfe\x76\x24\xa4\xe7\xad\x63\x1f\xad\x79\xf7\xa5\x84\xe0\xb0\x1d\x05\xdb\x97\x2e\x37\x74\xdf\xbb\x7a\x77\x5a\xbf\xef\x43\x52\x7b\x67\xd9\x5c\xfb\x72\xe4\x1d\x4d\xd4\x4a\xd7\xb3\xaf\xac\xef\x6e\x1d\x5f\xf8\x7c\xa2\x6e\x73\xa4\xf5\xfc\xaf\x33\x17\x07\xf7\x3c\x98\x7b\x9d\xf7\x4e\xf8\x46\xd7\x05\xb7\x97\x1a\xfe\xbf\xbe\xef\x1a\xff\x7b\x10\x99\x13\x64\xbf\xcc\xb5\xeb\x5f\xcf\x74\x1e\xd8\xeb\xc4\xb8\xe1\xdb\xf5\xe3\x46\x57\x45\x95\x2d\x7c\x51\xe7\xb7\xfa\x7d\xfd\xd1\xbc\xd7\x23\xe2\xf4\x43\x22\x33\xfe\x19\xe7\xb4\x3a\x6e\x91\xc7\x91\x35\x7b\xb6\xdc\x99\x57\x1a\xba\x25\x2a\xda\x48\x5d\xcb\xde\x30\xf4\xdf\x7b\x35\x63\x6d\xbf\x73\x1e\x5f\x6d\xce\x9d\xaa\xbd\x3d\xf8\xe5\x51\xa5\x95\x55\x21\xf3\xb3\xe6\xe7\x0c\x1d\x78\xf0\xe6\x95\x65\xdb\x0b\x59\x47\x16\x79\x65\x3f\x1f\x69\x6b\x57\xf1\xa6\xbe\xea\xa0\x61\x4c\x5d\xcb\x74\x1e\xdf\xe9\x5e\x97\x9c\x78\xc0\xe7\xf3\xd8\xa0\xe4\x51\x49\xdf\xef\xca\x3a\xcd\xba\xef\x41\x60\x81\x81\xdf\xf8\x86\x74\x5d\x7b\x74\x4e\xd2\x37\xd3\x2b\x56\xa5\x1f\x5a\xf7\xe5\x7b\xc5\xce\x0e\x27\x1d\xe7\x66\x6a\xad\xfe\x14\x3e\xd6\xe6\x68\x5e\xc4\x37\xa7\x17\x8e\x0d\x58\x3e\x6c\xcb\xb4\x9f\x3b\x5d\x9a\x97\x73\xb1\x78\xb6\xc3\x7b\x13\xc6\xe4\x4c\x88\x9e\x13\x7d\xb2\xc3\xfe\xd1\x29\xe5\x17\x92\x26\xa5\x7c\x37\xa2\xc7\xba\xa0\xb1\x13\x9e\xd2\x8f\x8e\xce\xa7\x1c\x83\xdd\xfb\xa6\x39\x06\xef\xba\x37\x3c\xd3\x23\xe4\xd9\xc4\x1a\x97\xde\xe9\x7b\x4f\xa5\x17\x15\xbf\xed\xb0\xfb\xd2\x4f\xb7\x97\xc5\x65\xcc\xa3\xd4\xb2\xe3\x79\x99\x9b\xaa\x63\x5f\xad\x7e\xc3\x3e\xfd\xef\xeb\xce\x77\xe0\x27\xe4\x9e\x1b\xe9\xf9\xbe\xd9\x6f\xf6\x5f\xff\x51\xe1\xa9\x2e\xfd\x5e\x5d\x9d\xba\x26\xe6\xec\xc7\x4b\x16\x7f\xf2\xe3\x01\x9f\x55\xa3\xfe\x98\xcc\x6e\xee\x79\x86\x07\xce\x4a\xf3\x09\x8b\x1b\xb9\x63\xfc\xb5\xad\x33\xb2\x9a\xab\xc7\x1e\xdf\x99\x72\xe1\x53\xd6\x87\x47\x1c\x02\x72\xfb\x6a\x23\x92\xcb\x97\x18\xac\x7b\x5e\xbb\x75\x75\x3e\x3b\x2d\x57\xae\x4a\xc8\xf6\xf8\xb3\xf6\xbe\x7f\x8c\xd5\xbc\x3c\x8f\x33\x2b\xa7\xcf\x19\x36\x73\x43\xe0\xf1\x65\xc9\x36\xd3\x96\x6e\xca\xa9\x73\xea\x32\x3c\x73\xec\x3a\x1a\x4b\x15\xfa\x01\x79\x9f\x7f\xc8\x4e\x94\x70\xc7\x55\x65\xae\x09\xd5\x11\x97\x3d\x47\x56\x45\x5c\x1e\x98\xb7\x68\x5f\xc7\xac\xaa\x93\x6b\xb6\x36\xea\xb9\x3a\xbf\xf5\x56\x07\xfa\x6c\xbf\xe9\x97\xba\x6d\x01\xbb\xc4\x3c\xb7\x62\xd2\xdc\x15\xa1\x0b\x57\x84\x79\x86\xbc\x15\xc6\x6e\xc8\xcd\xc5\xd5\xdd\xd9\x65\x84\xb3\x9b\x9b\xd6\xd5\xdd\xd3\xd5\xcd\xd3\xcd\xcd\xd9\xc5\xdd\xd3\xc5\xe5\xe1\x6b\x93\x93\x1b\xdc\x61\x49\x64\xe8\xeb\xe1\xef\x3c\xfd\x0e\xdb\xc6\x97\xf5\xe2\xd7\xbd\x29\x93\xa6\x4f\x4c\xf1\x09\xde\xc8\xc7\x59\x6c\xa8\x46\xc1\xf4\xc8\x38\x6b\x50\x8b\x8c\xb3\x00\x68\xcd\x6c\x25\xf3\xc7\x9b\x22\xe4\x35\x6f\x6c\xa5\xb5\xff\x6a\x85\x0a\x6a\x30\x47\x73\xc7\xc9\xa2\x45\xfd\xa8\x5f\xf6\xfa\x1f\xaa\xa0\x0e\x53\x35\x30\xa3\x99\x55\x64\xfa\x7b\x05\xa2\xe4\x35\x47\x11\x00\x00\x88\x03\xe3\x7f\x71\x62\xfc\x8f\xfa\x51\x7f\xeb\xb5\x2d\xd4\x8f\xf1\x3f\xc6\xff\x00\x00\x39\xd9\xcc\xac\x24\xf1\xd7\xc3\xff\x55\x5e\xb3\x8e\x30\xfe\x17\x69\x5b\x18\xff\x88\xae\x01\xf5\xb7\x5e\xdb\x42\xfd\xd5\x2a\xa8\xc3\x54\xf9\xf8\x7f\x03\xb5\xce\xdf\x5f\x18\xff\xab\x00\xe3\x2f\x3c\xfd\xd6\xd2\xc7\x93\xed\xf8\x7c\x9e\x96\x13\xd3\x8b\x1e\x99\xa7\x65\x8f\x79\x5a\x4f\xe0\x05\x32\x7d\x3e\xb1\x39\x06\x30\x07\x93\x79\xf3\xc9\xcd\xf5\x9e\xc0\x63\xff\xfa\x7b\x12\xc7\x17\x7b\xfc\x32\x81\xc7\x2f\x66\x0e\x25\x31\xcf\x3f\x2e\xbf\x4c\x02\xb1\xbc\x45\xa6\x7f\x9e\xca\x1c\x8f\x30\x97\x30\xeb\x48\xdc\xf9\x2f\xfa\x35\x82\x1a\xae\x3f\x32\x1f\x9f\xbf\xc7\xf6\xb5\xc0\xe3\xa7\x13\x90\x9d\x4c\x12\xf3\x3a\x9d\x9f\xfb\x69\x24\xfe\xf9\x27\xf3\xf5\x47\x0d\xc7\x17\x59\x03\xff\xfd\xcb\xc7\x00\x22\xc6\x1f\x49\xf5\xc7\x16\x8a\xd1\xd8\xb4\x77\x24\x8c\x8f\xd0\xd4\x9f\x6b\xca\xcf\xf2\x01\xb8\x8e\x6f\x68\x1e\x79\x9f\x82\xfd\x0f\xef\x53\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x25\xff\xc7\xf4\x23\x71\x73\x06\x60\xcb\xcb\xe7\x46\xf1\x75\x1e\xbb\x50\x43\xc2\x98\x7a\x12\xfb\x37\x0b\x68\x39\xf9\xdc\xa4\x79\xa4\x30\x43\x05\xf5\x40\xcb\xcb\xe7\xe7\xf8\x30\xcf\xa8\xa0\x16\x28\xc6\x53\xd4\xba\x3f\x4f\x0d\xcd\xb3\x44\x05\x35\x40\x71\x3e\x50\x41\x0d\x10\xf9\x43\xe4\x0f\x91\x3f\x44\xfe\x10\xf9\x43\xe4\x0f\x91\x3f\x44\xfe\x10\xf9\x43\xe4\x0f\x91\x3f\x44\xfe\x10\xf9\x43\xe4\x0f\x91\x3f\x44\xfe\xd0\xbc\xfc\x5b\xfb\x9a\xde\xd0\x74\xef\x32\x4f\xab\xa0\x0e\x28\xc6\xcf\x98\xde\xcc\xff\xa8\xa0\x16\x68\x59\xf9\x1a\x5d\xee\xa4\x30\x97\x59\xaa\x82\x9a\xa0\x65\xe4\xeb\x13\xcf\xa0\x86\x74\x22\x65\x59\xeb\x69\xb0\x4d\x3b\x8e\x69\x4b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xda\x22\xed\x98\x2f\x33\xff\x42\xe2\xbe\xb3\x0b\xb6\xbc\xfc\xbb\x59\xe3\x99\x33\xe9\x37\x6c\x98\xa9\x24\x7e\x4e\x0a\xb4\xac\x29\xcc\xf6\xcc\x0d\x2a\xa8\x05\x8a\x71\x39\x33\x5f\x05\x75\x40\x31\x5e\x22\xb1\xdf\xd3\x0d\xc5\xfa\xb3\x0a\x6a\x80\xe2\xc4\xe7\xbf\xe4\x16\xf9\xcb\x2d\xf2\x97\x5b\xe4\x2f\xb7\xc8\x5f\x6e\x91\xbf\xdc\x22\x7f\xb9\x45\xfe\x72\x8b\xfc\xe5\x16\xf9\xcb\x2d\xf2\x97\x5b\xe4\x2f\xb7\xc8\x5f\x6e\x91\xbf\xdc\x22\x7f\xb9\x45\xfe\x72\x8b\xfc\xe5\x56\x4f\xca\x5a\x70\xa2\xeb\x80\x62\xbc\xc9\x4c\x50\x41\x1d\x50\x8c\x71\xcc\x67\x98\x05\x2a\xa8\x05\x5a\x56\xfe\xdc\xef\x4e\x0a\x7d\x99\x1f\x30\xef\x90\x32\x26\x80\x6d\xd7\x22\x52\xae\xf9\xbd\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x6d\x89\x01\xa4\xac\x0d\x5a\xc2\xac\x85\x6d\xd6\x9a\xfa\x8c\x0f\x31\xfb\x91\x82\x13\xb3\x98\xc4\xcf\x47\x82\x96\x95\xcf\x03\x72\x60\x1e\x56\x41\x2d\x50\x8c\x7c\xbd\xef\xfb\x2a\xa8\x03\x8a\x11\xf3\x7e\xe5\x56\xaf\x82\x1a\xa0\x38\xf1\xf9\x2f\xb9\x45\xfe\x72\x8b\xfc\xe5\x16\xf9\xcb\x2d\xf2\x97\x5b\xe4\x2f\xb7\xc8\x5f\x6e\x91\xbf\xdc\x22\x7f\xb9\x45\xfe\x72\x8b\xfc\xe5\x16\xf9\xcb\x2d\xf2\x97\x5b\xe4\x2f\xb7\xc8\x5f\x6e\x91\xbf\xdc\xf2\xfc\x6b\x54\x50\x07\x14\x63\x19\xf3\x8a\x0a\xea\x80\x62\x3c\xcb\x8c\x54\x41\x1d\x50\x8c\xa1\xcc\x76\x84\x39\xe0\x32\x9a\xc8\xd4\xd0\x6f\xbc\xc4\xdc\xc5\x3c\x00\xdb\xb4\xbb\x99\x7e\x04\x00\x00\x00\x00\x00\xa4\xc4\xa8\x72\xd2\x1b\x96\x6b\xa5\x6b\xb8\xad\xb1\x54\x3f\x81\x27\xa3\x6b\xb8\xa9\x49\x6f\xb8\x6d\x25\xfa\xfc\xb1\x34\x8d\xfa\xc3\xaa\x05\xbb\x1e\x98\x80\xae\xe1\xa6\x46\xf4\xf9\x22\x9a\xc6\xfd\x61\xa9\x1c\x40\xd3\x48\x6f\xb8\xd9\xec\xd7\xd3\x21\xec\x41\xbd\x48\x79\x5e\x68\x7e\x59\x0a\x46\xd9\xd1\xa3\xb3\x22\x00\x00\x00\xea\xc3\xdc\xc9\x4c\x92\x48\xbe\x26\x5c\x2c\xb3\x27\x33\x8b\xc4\xff\xcd\x4a\x94\xff\x60\xd6\xa9\xa0\x0e\x51\x56\xa8\xa0\x06\x91\x56\xa9\xa0\x06\xb4\x1f\xed\x47\xfb\xd1\x7e\xb4\x1f\xed\x17\xd1\x7e\x99\xc7\x3f\x06\x52\xde\x8a\x11\x5d\x87\x28\x8f\x33\x7b\x93\x7c\xaf\x7f\xb8\xfc\xf5\x4f\x0f\x02\x00\x00\x00\xe4\x65\x0c\x53\x2b\x91\x01\xcc\x3f\xd4\xb7\x9d\x8f\x7d\x44\x8f\xc3\x44\xb9\x85\xe4\x7e\x0d\x24\xfb\x1a\xf9\x32\x67\x8f\xf6\xa3\xfd\x68\xbf\xf8\x1a\xd0\x7e\xb4\x1f\xed\x17\x63\x25\xc9\xfd\x5d\x31\x3f\x30\x27\x33\x0b\x49\xfc\x77\xb8\x59\xda\xdb\x4c\x6f\x02\x00\x00\x00\x80\x8c\x4c\x21\x65\x0c\x28\x7a\x3c\x62\xe9\xef\xcb\xcd\x67\x4e\x20\x65\xec\x27\x7a\x1c\x2a\xca\x1b\x2a\xa8\x41\xa4\x95\x2a\xa8\x41\xa4\xb2\xbf\xfe\x45\xfb\xc5\xd7\x80\xf6\xa3\xfd\x68\x3f\xda\x2f\xaa\xfd\x32\xaf\x95\x5c\xc2\xdc\xaa\x82\x3a\x44\xb9\x9e\x14\x46\x31\xfd\x25\x73\x24\x01\xe9\x69\xea\x7a\x02\x6a\xad\xab\x31\x3a\xe5\xee\x16\x5b\xef\xc2\xd4\x3a\x2d\xdd\xaf\x3a\xe5\xe6\xb1\x75\x51\xfe\x1b\x00\x00\xff\xff\x46\xb4\x2d\xb4\x6e\x8a\x01\x00")

func assetsFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_assetsFaviconIco,
		"assets/favicon.ico",
	)
}

func assetsFaviconIco() (*asset, error) {
	bytes, err := assetsFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/favicon.ico", size: 100974, mode: os.FileMode(436), modTime: time.Unix(1462600281, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x5a\x7b\x73\xdb\x36\x12\xff\xbf\x9f\x02\x65\x66\x2a\xb9\x96\x28\x39\xee\x23\x91\x65\xdf\x24\x6e\x66\x92\x9b\x34\xe9\x9c\xed\xe9\xdc\xe4\x3c\x19\x88\x84\x24\x9c\x29\x82\x05\x40\xa9\xbe\xab\xbf\xfb\xed\x92\x20\xc5\x07\x40\x4a\xcd\x15\x9a\x89\x45\x02\xbb\x5c\xec\xe3\xb7\x3f\x50\x99\x7f\xfd\xd3\xc7\xeb\xdb\x7f\xfe\xf2\x86\xac\xf5\x26\xba\xfa\x6a\x5e\xfc\x61\x34\xbc\xfa\x8a\xc0\x98\x6b\xae\x23\x76\x15\x89\xd5\x46\xc4\xf3\x49\x7e\x95\xcf\x28\xfd\x58\x7c\xc7\xb1\x10\xe1\x23\xf9\x6f\x79\x99\xdd\xa2\xc1\xc3\x4a\x8a\x34\x0e\x67\xe4\xd9\x74\x3a\xbd\x20\x93\x6f\x9f\x9d\xbd\xc4\xcf\x05\xf9\x76\x52\x5b\xbb\x14\xb1\x1e\x2f\xe9\x86\x47\x8f\x33\xe2\xfd\x24\x05\x0f\xc9\x0d\x8d\x95\x37\x22\x0a\xfe\x8c\x15\x93\x7c\x79\x51\x8a\x3c\x95\xdf\x9e\x29\x1e\xb2\x05\x95\x8d\x67\x27\x42\x71\xcd\x45\x3c\x23\x74\xa1\x44\x94\x6a\x76\x51\x9b\xd7\x22\x99\x91\x69\xfd\x5e\xc4\x96\xba\x75\x73\x21\xb4\x16\x9b\xd6\xed\x1d\x0f\xf5\x7a\x46\x9e\x7f\x3f\x4d\x7e\xbf\x70\xef\xda\xec\xb6\x6e\x1a\x0d\x43\x1e\xaf\x66\xe4\x0c\x64\xc9\x14\x3f\x9d\x1b\xbb\x22\xb4\xb1\xb9\x40\x44\x42\x82\x76\x7a\x8e\x9f\xba\xf6\x20\x95\x0a\x27\x13\xc1\x63\xcd\x64\x7d\x32\xe4\x2a\x89\x28\x78\x78\x11\x89\xe0\xc1\x61\xd6\x0f\x60\xd5\xd9\xf7\xcd\x6d\x6d\xa8\x5c\x71\x70\x27\xda\x7b\x86\x76\x77\xec\xfa\xf9\x6b\xfc\x5c\x38\x02\x22\x59\x44\x35\xdf\xb2\xbe\x4d\xfb\x34\xc0\x65\xdd\x49\xf5\x1d\xe6\x55\x97\x22\x3a\x5b\x8b\x2d\x6b\xa6\x47\xdd\xdc\x17\xf0\x79\x79\xa0\x39\xfd\xea\x0e\x31\x8a\xa8\x84\xc6\x47\xa6\xac\x89\xfa\x6e\xcd\x9b\x33\xb5\xc7\x9f\xbf\x78\xf9\xea\xfc\x45\x7d\x81\xe4\xab\x35\xa4\xf6\x8f\xcd\xa0\x66\x55\xa7\xf8\x7f\x18\x24\xe3\xf3\xe6\x64\x56\x22\x3f\xb4\xd2\x5b\xc8\x90\xc9\xb1\xa4\x21\x4f\x95\x65\xbe\x4c\x23\xd0\x47\xbe\xab\xce\x3a\xfd\x30\x63\x9b\x44\x37\xc1\xa3\x4c\xd5\x58\xc4\xf6\x54\x09\xc0\x78\x16\xeb\xff\x5b\xe1\x5b\x6a\xd9\xf8\xed\x30\x48\xa8\x43\xd8\xb5\x48\x25\x87\x44\xf9\xc0\x76\x80\x61\xe6\x6a\x44\xbc\xf7\x69\xc0\x43\x9a\x61\x1b\xb9\x7d\x4c\xd8\x4e\x42\x38\xa5\xb7\x9f\xa9\xdd\x04\xd4\x15\xe0\xa2\x80\xb9\xe3\xe6\xf2\x71\xe1\x9e\x2b\x70\xe5\xf6\xaf\x42\xc7\xa3\x1c\x84\x85\xb3\x8c\xc4\x6e\x0c\xfe\xa1\xa9\x16\x8e\xd9\xdf\x6d\xb3\x65\x5a\xb5\x80\x29\xab\x87\x71\xe6\x24\x4c\x96\x9d\xa4\x49\x7d\xc1\x96\x2b\xbe\xe0\x11\xd7\xf0\xd8\x35\x0f\x43\x16\xf7\xfb\xcb\x8e\x3d\x55\x4d\xd9\xf7\xa8\x3b\x33\x73\xd7\xdb\x02\xd0\x05\xc4\x05\xba\xdb\x0a\xb9\x74\x83\x03\x86\x6b\xce\x48\xa4\x03\x63\x35\xd5\xa9\x6a\x58\xb4\x66\x79\x28\xcf\x3a\x1b\x9a\x64\xa1\x0b\xd6\x0f\xcf\x24\x77\xef\x6c\xe5\xd8\xde\xea\xd9\x6c\xbc\x63\x8b\x07\x0e\x79\x1f\x48\x11\x45\xed\x96\x6f\xd4\x9e\x9d\x37\xb5\x96\x5b\x3b\xb7\x97\x8a\x45\xf5\x58\x4b\xd8\x75\x67\xd3\x38\xc7\xcf\xc1\xea\xd6\xe9\x66\xd1\xa5\xae\x19\xec\x6e\x75\x81\x90\x71\x4f\x4f\xb3\x9a\x37\x9f\x18\xd6\x96\x5f\x45\x3c\x7e\xc0\x76\x7c\xe9\x71\x48\x59\x8f\xac\x25\x5b\x5e\x7a\x4b\xba\xc5\x4b\x1f\xfe\xf1\x80\x0c\x4e\x72\x36\x38\x47\x82\x67\xa8\x1f\xe6\x33\x0f\x2f\x3d\x03\xe3\xde\xd5\x7c\x02\xb7\x1a\x93\xa6\x08\xec\x93\x79\x0a\xd6\xe7\x60\x7b\x3c\xd1\x7b\x46\xb9\x85\x08\xdf\xbd\x23\x97\x8d\x6d\x46\x7c\xc3\xf5\x7b\xb1\x82\xe6\x73\x0e\x7d\x76\xd4\x48\x37\x4d\xa3\xbb\x58\x82\xc9\x90\x47\xf5\x39\x1e\x73\x48\x82\x65\x1a\x07\x98\xb0\xc3\x93\x86\xde\xe2\x91\x89\x90\x1a\x1e\xba\xe3\x71\x28\x76\x7e\x28\x82\x74\x03\xdb\xf0\xa1\x4e\x29\xca\xf9\x38\xdf\x12\x2c\xc6\xdf\xba\xe5\xc8\x8c\xbc\x80\xec\x6e\x89\xeb\x35\x57\xbe\x02\x24\x60\xf8\xe8\x98\xed\xc8\xaf\x6c\x71\x93\x5d\x0f\xbd\x9d\x9a\x4d\x26\xa8\x26\x5a\x0b\xa5\x67\x1e\x39\xcd\x6d\x3c\x25\xde\x64\xa7\xbc\x93\x6e\x7d\x3e\x74\x90\x84\xc5\xa0\x36\xbb\x29\xe2\x8f\x70\xe5\x2f\xc0\xca\x21\xde\x38\xb9\xe8\x11\xde\x30\xa5\xe8\x8a\xed\xe5\x7f\xce\x6f\x1c\xa1\x22\x88\x84\xaa\x28\xb8\xc6\xcb\x9a\xb8\x5d\x3e\x14\x1b\x0c\xfe\x93\x43\x3d\x4c\xfb\x05\x8f\xb8\x24\xa5\xbf\x57\x4c\xbf\x89\x18\x7e\x7d\xfd\xf8\x2e\x1c\x0e\xcc\x92\x81\xcb\x4a\x54\x53\xe0\x75\x87\x1a\xb3\x64\x60\xb3\xb6\x14\x12\xf1\x03\x7b\x84\xe8\xa3\xb7\xcb\x3c\x63\xb6\x44\xc3\x81\xc9\x16\x88\x10\x3d\xc3\x7c\x10\xbc\xc6\xef\x7f\xfc\x01\x17\x80\xe2\xc1\xba\x6d\x2f\x0e\xbe\x24\xc3\x5c\xe8\x92\x3c\xff\xd1\xa5\xba\x50\x4f\x0b\xaf\x57\x9c\xe5\xff\x96\x32\xf9\x78\xc3\x22\x16\x68\x21\x87\xde\x9e\x8c\x99\xa6\xe7\x9d\x8c\x9c\x4a\x71\xec\x0a\xa5\x79\xaa\xab\x4f\x14\xbd\xf5\x4a\x6b\xc9\x17\x80\xff\xc3\x41\x48\x35\x1d\xc7\x74\xc3\x06\x27\xf7\x16\x77\x95\x7a\x7c\x1e\x03\x8a\xbd\xbd\xfd\xf9\x3d\x68\x1c\x0c\xec\x1b\x7e\x6a\xdd\x7d\xaa\xe4\x4e\x6d\xf2\xa9\x6e\x77\x8e\x31\x33\x8b\x8b\x42\x24\x27\xee\x8c\xc9\xe4\x06\x16\x2f\xac\x24\x63\x71\x0f\x84\xe0\xd8\xbb\x1c\xd1\xd6\xdf\x03\x33\xee\x33\x53\x62\xd9\xec\x53\xfb\x79\xd0\x6d\xbf\xf4\x69\xa0\xc2\xf6\xac\x2e\xbf\xe5\x10\x31\xeb\xc9\x60\x4c\xc4\xec\xc9\x92\x41\x6d\xc4\x90\x4c\xef\xf0\xbc\xb9\xa5\x91\xcb\xce\x20\x62\x54\x16\x8b\x5c\xb2\xf6\x24\x08\x21\x5b\x35\x23\x76\x19\xdb\xf6\x1c\x88\x94\x45\xd6\xcf\x22\x30\x6c\x3c\xaa\xe5\x04\x83\x73\x4d\x3f\x58\x7b\xc6\xbf\x95\xc0\x9a\xff\xfb\xcd\xc7\x0f\x7e\x42\xa5\x62\x43\xe6\x63\x15\xd8\xd0\x02\xac\x07\xa2\xc4\xa0\x31\xac\xcc\xaa\x51\x26\x6f\x5b\x8b\x4e\xc6\x39\x7f\xc9\x23\xa6\xfa\x13\xc0\x54\xf8\x21\x75\x25\x99\x4e\x65\x9c\xcb\x62\x67\xbc\xd1\xd0\x34\x37\xaa\xfa\xb8\x9e\xb4\xc1\xc1\x22\xd5\x24\xc9\x55\xbf\xb4\xa0\x02\xb5\x7f\x9a\xde\xdf\xbb\x11\x26\xac\xa2\x70\x00\x36\x69\x66\xaa\x13\x80\x85\x6f\xad\x00\x8c\x23\xd3\x7c\x76\x0f\xd2\xe6\x5b\x27\x86\x41\x16\x01\xff\x0e\xd8\x70\xf2\xcd\x64\x05\x67\xaf\x6f\xe8\x26\xb9\xf0\xda\x3b\xb6\xcb\xcc\x73\x99\x48\x1f\x2e\x72\x95\x8b\xac\x8e\x10\xf1\x72\x91\xdf\x52\x71\x84\xd0\x20\x17\x7a\x36\x3d\x7f\x79\x61\xa5\x06\x38\xc2\x5a\x86\x18\x7f\xd9\xd3\x64\xe7\xd3\x04\xd0\x20\xbc\x5e\xf3\x28\x1c\x86\x2e\x8d\x93\x09\xb9\xc9\xd8\x29\x30\x30\x73\xfc\x73\xa8\xcb\x49\xec\xad\x48\x90\x63\x99\xab\xb7\x19\x41\x77\xab\xbe\x06\xe4\x88\x49\x9a\x10\xa8\x19\xe5\x2e\x81\xcf\x88\x30\xf1\x5d\x32\x34\x59\xe6\x32\x16\xab\xea\x6b\xe8\x3e\xea\x55\xd6\xef\xba\x9a\x68\xa6\xb7\x42\x2a\x4f\x4f\xed\x6e\xca\xf7\x96\x1e\xb0\xc6\xd4\xe8\x5b\x1a\x87\x00\x02\xf5\x5e\x3c\xc0\xb7\x21\x83\x93\x5a\x74\x0a\xad\x07\x77\x47\x07\xf6\x7d\x4e\x13\xc0\x1a\x76\x8b\x6f\x70\x7b\xb0\xaf\xba\xb4\xd1\x7f\xec\xba\x2b\x0e\x02\x8b\x6d\x04\x17\x82\xf8\x16\x36\x4e\x28\x64\x88\xc1\x82\xd6\x9a\xa5\x90\x64\x88\xa8\x01\x5c\x08\xc8\x7a\x0d\x38\x5c\x31\x2a\xbb\x90\x59\xe7\xaf\xa9\xfa\xb8\x8b\x7f\x91\xc0\x79\xa5\x7e\x1c\x82\xaa\x93\x63\xe2\x4b\x4e\x1b\x80\x05\x0a\xee\xbf\x3c\x02\xa5\x99\x35\x4f\x81\xab\x5c\xb6\x95\x08\x98\xbd\x71\x47\x18\xcf\x5f\xc1\xf7\xf6\x72\x1c\x1d\xa0\xec\xd2\x4b\x86\x03\x38\x4f\xb4\xbd\x41\x06\x27\xc7\xd2\x87\xa2\x0a\x2b\x99\x83\x5c\xd0\x75\xdc\x32\x8e\x6e\x36\x0a\x14\xb9\xaf\x97\xc7\xab\x28\x2a\x5b\x80\xcd\xc1\x45\x0a\x44\x2c\x5e\xe9\x35\xb9\xca\x15\x96\xc7\x45\x97\xab\xcb\xb4\xe3\x59\xee\xc2\x9f\xf9\x65\x4b\xd9\xb8\xa9\x0c\xd6\x9d\x9e\x76\x65\x56\xb1\x11\x7e\x8f\x8c\x00\x5c\xfe\x01\x58\x3b\xe0\xf4\x46\x6c\x59\x0e\xa6\xfb\x15\x0e\xd6\x63\x4b\xad\x0e\xc7\x9b\x93\x55\x1f\x71\xab\x32\x21\x60\x87\x4d\x2c\x28\x97\x94\x3c\xab\x07\x2d\xca\x75\x3d\x54\xf5\x78\xc2\x98\x53\x94\x83\x11\xae\xa5\x17\xe2\xa9\x58\x79\x35\x3c\x8c\x48\x3b\x4e\xe1\xd9\x1c\x0d\x43\x09\xac\xd0\x11\xae\x2f\x3a\x74\xb7\x15\xfc\xa9\x83\x77\x5b\x4d\xef\xe1\xbb\xe5\xde\xca\xec\x88\x9c\x4d\xa7\xd3\xee\xf8\x57\xc8\x63\x25\x03\x9c\x84\xb5\x5a\xe5\x07\x1e\xef\x7b\xf9\x6c\xf3\x20\xdf\x12\x68\xf7\x1a\x34\xcf\x87\xd2\x7f\x43\x83\xf5\xb0\x66\xf5\x88\x70\x6b\xa7\xc3\x91\xc1\x04\xf6\x38\x5c\x08\x0c\x63\xcf\xbb\x3e\x91\x7f\xf9\xf7\xa7\x93\x11\x19\x8c\x9d\x14\x15\x99\x4c\x46\x68\x49\x71\xe4\x5e\x67\x2c\xc0\xfd\x28\xcd\x36\x1d\x74\x98\xda\x90\x30\x0b\x09\xc8\xd5\x7c\x60\xcc\x45\x3c\x9f\x23\xc7\xb8\x9a\x4f\xb2\x3f\x8e\xb3\x41\x2e\x9f\x9d\x1f\xd5\x67\x6c\x0c\xdc\xd1\xfc\xb2\x85\xca\x71\xf8\x1f\x15\x8f\xed\xca\xd3\x6a\x98\xab\x4c\x13\x35\xf7\xfb\x11\x9a\x97\x01\x5a\xa7\x0f\x61\xc9\xaf\xd9\x8a\xfe\x73\x85\x4d\x45\x29\x6e\xfc\xb1\xeb\xf4\xc7\x7e\x75\x5a\x61\x43\x3d\x7a\x0d\x0d\xc5\x30\x51\xe8\xdc\x7d\xeb\x6b\x04\x12\x84\xd0\x53\x0e\x47\xb5\xea\xa2\xea\xe1\x52\xa3\xcb\xcd\xb5\x7e\x6c\x42\x89\xe7\xab\x52\xd0\x1d\x9e\xd7\x30\x0f\xe7\x7d\x1e\x3c\x10\xb6\x85\x07\xbb\x93\x07\x01\x0a\x97\x35\x5f\x98\x39\xfb\xea\x21\x4c\xb2\x18\x7f\x86\x51\x96\xd6\x7d\x21\xb3\x2c\x46\x9b\x4d\x06\x11\x55\xea\x03\x54\x48\xc7\xe9\xbc\x5b\xc3\x61\x29\x53\x8c\x36\x8d\xd8\xcf\x74\xb9\xf9\x1f\x19\x57\x21\xe6\x97\xb0\x02\xb2\x30\x6a\xdd\xef\x1c\xe3\x60\x2d\xa4\xaa\x96\x5b\x8b\xc6\x55\x5e\x3a\x7a\x8e\xc2\xc3\xf1\xe9\xbe\x80\x68\x3f\x80\x78\x0f\x8d\xea\xd1\x3e\x57\x68\x5f\x08\xe8\xc1\xee\x7e\x72\xd5\x81\x71\x47\xe6\x72\x04\x1d\x24\x06\x1d\xa0\x83\x83\xf9\x9a\xca\x15\xf4\xdf\xda\xc3\x73\x4f\x76\x98\x50\x8a\xf5\x1f\x0b\xad\x5d\xad\x18\x7b\xb0\x38\xee\xf9\x87\xc3\x57\x7d\x75\x25\x1f\xb5\x4c\x59\x87\x65\xbd\x47\xd1\x62\x3c\x1d\xcc\x51\x6c\x61\xab\x86\x6b\xc9\xa5\xd2\xae\x80\x1d\x98\xa2\xd8\xea\x33\x9c\x6a\x71\xe1\xf2\xea\xa9\x62\x86\xf9\x0d\x48\xc4\x91\xc8\x9c\x78\xf7\x2e\x7b\xc5\x96\x1b\x7d\xf7\xce\xe8\x80\x1e\x6c\x7e\xf1\x9a\x4f\xf2\x1f\xd7\xe6\x93\xec\x3f\x60\xfd\x2f\x00\x00\xff\xff\x92\x72\xb0\xed\x97\x25\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 9623, mode: os.FileMode(436), modTime: time.Unix(1462711524, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/config-template.json": assetsConfigTemplateJson,
	"assets/favicon.ico":          assetsFaviconIco,
	"assets/index.html":           assetsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"config-template.json": &bintree{assetsConfigTemplateJson, map[string]*bintree{}},
		"favicon.ico":          &bintree{assetsFaviconIco, map[string]*bintree{}},
		"index.html":           &bintree{assetsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
